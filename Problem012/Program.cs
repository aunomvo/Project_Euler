using System;
using System.Diagnostics;

namespace Problem012
{
    /// <summary>
    /// The sequence of triangle numbers is generated by adding the natural 
    /// numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
    /// The first ten terms would be:
    /// 
    ///     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
    /// 
    /// Let us list the factors of the first seven triangle numbers:
    /// 
    ///    1: 1
    ///    3: 1,3
    ///    6: 1,2,3,6
    ///    10: 1,2,5,10
    ///    15: 1,3,5,15
    ///    21: 1,3,7,21
    ///    28: 1,2,4,7,14,28
    /// 
    /// We can see that 28 is the first triangle number to have over five divisors.
    /// 
    /// What is the value of the first triangle number to have over five hundred divisors?
    /// </summary>
    class Program
    {
        static void Main()
        {
            var stopwatch = new Stopwatch();

            stopwatch.Start();
            var result = SolveProblem();
            stopwatch.Stop();

            Console.WriteLine(string.Format("The result is {0}.", result));
            Console.WriteLine(string.Format("The calculation took {0} ms.", stopwatch.ElapsedMilliseconds));
            Console.WriteLine(string.Empty);
            Console.WriteLine("Press any key to exit.");
            Console.ReadKey(true);
        }

        private static int SolveProblem()
        {
            var loopCounter = 0;
            var retval = 0;
            while(true)
            {
                loopCounter++;
                retval += loopCounter;
                var divCount = DivisorCount(retval);
                if (divCount > 500)
                    break;
                Console.WriteLine("{0}:{1}", retval, divCount);
            }

            return retval;
        }

        private static int DivisorCount(int num)
        {
            var retval = 2;
            for (var i = 2; i < num; i++)
            {
                if (num % i == 0)
                {
                    retval++;
                }
            }
            return retval;
        }
    }
}
